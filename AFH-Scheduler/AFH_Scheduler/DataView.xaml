<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="AFH_Scheduler.DataView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>


    <DockPanel LastChildFill="False">

        <StackPanel
            Margin="0,15"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            DockPanel.Dock="Top"
            Orientation="Horizontal">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="100" />
                    <ColumnDefinition Width="Auto" MinWidth="320" />
                    <ColumnDefinition Width="Auto" MinWidth="133" />
                    <ColumnDefinition Width="Auto" MinWidth="100" />
                    <ColumnDefinition Width="Auto" MinWidth="133" />
                    <ColumnDefinition Width="Auto" MinWidth="100" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    HorizontalAlignment="Right"
                    FontSize="18">
                    Filter By:
                </TextBlock>
                <TextBox
                    Name="FilterTextBox"
                    Grid.Column="1"
                    Margin="20,0"
                    FontSize="18"
                    IsEnabled="{Binding TextFieldEnabled}"
                    IsEnabledChanged="FilterTextBox_IsEnabledChanged"
                    Text="{Binding FilterItem}" />

                <DatePicker
                    Name="DatePickerStart"
                    Grid.Column="1"
                    MinWidth="100"
                    Margin="10,0"
                    HorizontalAlignment="Left"
                    FlowDirection="LeftToRight"
                    FontSize="18"
                    IsEnabled="true"
                    SelectedDate="{Binding StartDatePicked}"
                    Style="{StaticResource MaterialDesignFloatingHintDatePicker}"
                    Visibility="Hidden" />

                <TextBlock
                    Name="ToTextBlock"
                    Grid.Column="1"
                    Margin="10,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FlowDirection="LeftToRight"
                    FontSize="18"
                    Visibility="Hidden">
                    To
                </TextBlock>

                <DatePicker
                    Name="DatePickerEnd"
                    Grid.Column="1"
                    MinWidth="100"
                    Margin="10,0"
                    HorizontalAlignment="Right"
                    FlowDirection="LeftToRight"
                    FontSize="18"
                    IsEnabled="true"
                    SelectedDate="{Binding EndDatePicked}"
                    Style="{StaticResource MaterialDesignFloatingHintDatePicker}"
                    Visibility="Hidden" />

                <ComboBox
                    Grid.Column="2"
                    FontSize="18"
                    SelectedItem="{Binding SelectedFilter}">
                    <ComboBoxItem Content="Provider Name" />
                    <ComboBoxItem Content="License Number" />
                    <ComboBoxItem Content="License Name" />
                    <ComboBoxItem Content="Address" />
                    <ComboBoxItem Content="Next Inspection Date" IsSelected="{Binding DatePickerEnabled}" />
                </ComboBox>
                <Button
                    Grid.Column="3"
                    Width="100"
                    Margin="10,0"
                    Command="{Binding Path=FilterTableCommand}"
                    FontSize="14"
                    Style="{StaticResource MaterialDesignRaisedLightButton}"
                    ToolTip="Resource name: MaterialDesignRaisedLightButton">
                    _FILTER
                </Button>

                <Button
                    Grid.Column="4"
                    MaxWidth="255"
                    Margin="10"
                    Command="{Binding Path=RefreshTableCommand}"
                    Style="{StaticResource MaterialDesignRaisedLightButton}"
                    ToolTip="Refresh the Table">
                    REFRESH TABLE
                </Button>
            </Grid>
        </StackPanel>

        <Canvas
            Width="1000"
            Height="500"
            Margin="40,0,40,0"
            Background="White"
            DockPanel.Dock="Top">
            <DataGrid
                Width="1000"
                MaxHeight="450"
                materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserSortColumns="True"
                ItemsSource="{Binding Providers}"
                SelectedItem="{Binding SelectedHome}"
                SelectionMode="Single"
                SelectionUnit="FullRow"
                VerticalScrollBarVisibility="Auto">
                <DataGrid.Columns>

                    <!--
                    <DataGridCheckBoxColumn
                        Binding="{Binding IsSelected}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}">
                        <DataGridCheckBoxColumn.Header>

                        <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                        <CheckBox HorizontalAlignment="Center" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}" IsChecked="{Binding IsAllItems3Selected}" />
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>

                    <DataGridTextColumn
                        Binding="{Binding ProviderID}"
                        IsReadOnly="True"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                        Header="Provider ID" />
                    -->
                    <DataGridTemplateColumn IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image
                                    Name="NoProviderImage"
                                    Width="20"
                                    Height="20"
                                    Source="Images/NoProviderWarning.bmp"
                                    Visibility="{Binding HasNoProvider, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <materialDesign:MaterialDataGridTextColumn
                        Binding="{Binding HomeLicenseNum}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        Header="License Number"
                        IsReadOnly="True" />

                    <materialDesign:MaterialDataGridTextColumn
                        Binding="{Binding HomeName}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        Header="Home Name"
                        IsReadOnly="True" />

                    <materialDesign:MaterialDataGridTextColumn
                        Binding="{Binding Address}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        Header="Address"
                        IsReadOnly="True">
                        <DataGridTextColumn.HeaderStyle>
                            <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding}"
                                                TextAlignment="Right"
                                                TextWrapping="Wrap" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </materialDesign:MaterialDataGridTextColumn>

                    <materialDesign:MaterialDataGridTextColumn
                        Binding="{Binding RecentInspection}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        Header="Recent Inspection"
                        IsReadOnly="True"
                        MaxLength="255" />
                    <materialDesign:MaterialDataGridTextColumn
                        Binding="{Binding NextInspection}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        Header="Next Inspection"
                        IsReadOnly="True"
                        MaxLength="255" />

                    <materialDesign:MaterialDataGridTextColumn
                        Binding="{Binding EighteenthMonthDate}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        Header="18th Month Drop"
                        IsReadOnly="True"
                        MaxLength="255" />


                    <materialDesign:MaterialDataGridTextColumn
                        Binding="{Binding RcsRegionUnit}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                        Header="RCS Region/Unit"
                        IsReadOnly="True" />
                    <!--  use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo  -->

                </DataGrid.Columns>
                <!--
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <DataGrid

                    Margin="36 0 36 0"
                    ItemsSource="{Binding HomesHistory}"
                    CanUserSortColumns="True"
                    CanUserAddRows="False"
                    AutoGenerateColumns="False"
                    materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                    materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                    DockPanel.Dock="Top"
                    IsReadOnly="True">

                            <DataGrid.Columns>

                                <materialDesign:MaterialDataGridTextColumn
                                    Binding="{Binding ProviderID}"
                                    IsReadOnly="True"
                                    Header="Provider ID"
                                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />

                                <materialDesign:MaterialDataGridTextColumn
                                    Binding="{Binding HomeID}"
                                    IsReadOnly="True"
                                    Header="Home ID"
                                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                                <materialDesign:MaterialDataGridTextColumn
                                    Binding="{Binding InspectionDate}"
                                    IsReadOnly="True"
                                    Header="Previous Inspection Date"
                                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                                <materialDesign:MaterialDataGridTextColumn
                                    Binding="{Binding InspectionOutcome}"
                                    IsReadOnly="True"
                                    Header="Inspection Outcome"
                                    MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding Path=DataContext.OpenEditHistoryDialogCommand,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" x:Name="EditHistory_Button" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="Resource name: MaterialDesignRaisedLightButton">
                                                _EDIT
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>

                        </DataGrid>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
                -->
            </DataGrid>


            <materialDesign:PopupBox
                Canvas.Left="972"
                Canvas.Top="472"
                PlacementMode="TopAndAlignCentres"
                Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                ToolTip="PopupBox, Style MaterialDesignMultiFloatingActionPopupBox"
                ToolTipService.Placement="Right">
                <StackPanel>
                    <Button Command="{Binding RunCompleteDialogCommand}" ToolTip="Complete Inspection">
                        <materialDesign:PackIcon Kind="Archive" />
                    </Button>
                    <Button
                        Command="{Binding RunHistoryDialogCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type Window}}}"
                        ToolTip="Home History">
                        <materialDesign:PackIcon Kind="HomeVariant" />
                    </Button>
                    <Button
                        Command="{Binding RunEditDialogCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type Window}}}"
                        ToolTip="Edit">
                        <materialDesign:PackIcon Kind="Edit" />
                    </Button>
                    <!--
                    <Button Command="{Binding Path=RefreshTableCommand}" ToolTip="Refresh Table">
                        <materialDesign:PackIcon Kind="Refresh" />
                    </Button>
                    <Button Command="{Binding Path=ExportTableCommand}" ToolTip="Export to Excel">
                        <materialDesign:PackIcon Kind="Export" />
                    </Button>
                    <Button Command="{Binding Path=AddNewHomeCommand}" ToolTip="Add a New Home">
                        <materialDesign:PackIcon Kind="Add" />
                    </Button>
                    <Button Command="{Binding Path=DeleteHomeCommand}" ToolTip="Remove Selected Home">
                        <materialDesign:PackIcon Kind="Remove" />
                    </Button>-->


                </StackPanel>
            </materialDesign:PopupBox>

        </Canvas>



        <StackPanel
            Margin="0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Orientation="Horizontal">

            <Button
                MaxWidth="255"
                Margin="40,0,0,0"
                Command="{Binding Path=AddNewHomeCommand}"
                Style="{StaticResource MaterialDesignRaisedLightButton}"
                ToolTip="Add a new home to database">
                ADD NEW HOME
            </Button>
            <Button
                MaxWidth="255"
                Margin="40,0,0,0"
                Command="{Binding Path=InactiveListCommand}"
                Style="{StaticResource MaterialDesignRaisedLightButton}"
                ToolTip="List all Inactive homes">
                InActive Homes
            </Button>
            <Button
                MaxWidth="255"
                Margin="40,0,0,0"
                Command="{Binding ImportTableCommand}"
                Style="{StaticResource MaterialDesignRaisedLightButton}"
                ToolTip="Import Table From Excel Spreadsheet">
                IMPORT
            </Button>
            <Button
                MaxWidth="255"
                Margin="40"
                Command="{Binding Path=ExportTableCommand}"
                Style="{StaticResource MaterialDesignRaisedLightButton}"
                ToolTip="Export Table to Excel Spreadsheet">
                EXPORT
            </Button>
        </StackPanel>

    </DockPanel>

    <!--
    <Grid>
        <TextBlock Text="This is the First Page"
                   FontWeight="Bold" FontSize="18"
                   HorizontalAlignment="Center" VerticalAlignment="Center" />

        <TextBox Text="Here's some test" HorizontalAlignment="Center" VerticalAlignment="Top"/>
    </Grid>




    <ContentPage.Content>
        <StackLayout>
            <Label Text="Welcome to Xamarin.Forms!"
                VerticalOptions="CenterAndExpand"
                HorizontalOptions="CenterAndExpand" />
        </StackLayout>
    </ContentPage.Content>
    -->
</UserControl>