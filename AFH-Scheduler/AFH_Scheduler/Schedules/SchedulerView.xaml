<?xml version="1.0" encoding="utf-8" ?>
<UserControl x:Class="AFH_Scheduler.Schedules.SchedulerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008">
    
    <DockPanel LastChildFill="False">
        <StackPanel VerticalAlignment="Bottom" DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 15">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="100"/>
                    <ColumnDefinition Width="Auto" MinWidth="320"/>
                    <ColumnDefinition Width="Auto" MinWidth="133"/>
                    <ColumnDefinition Width="Auto" MinWidth="100"/>
                </Grid.ColumnDefinitions>
                <TextBlock FontSize="18" Grid.Column="0" HorizontalAlignment="Right">Filter By:</TextBlock>
                <TextBox Name="FilterTextBox" IsEnabledChanged="FilterTextBox_IsEnabledChanged"  IsEnabled="{Binding TextFieldEnabled}" Text="{Binding FilterItem}" FontSize="18" Grid.Column="1" Margin="20 0"/>

                <DatePicker Name="DatePickerStart" Visibility="Hidden" IsEnabled="true"  Grid.Column="1" FlowDirection="LeftToRight" FontSize="18" HorizontalAlignment="Left" Margin="10 0" MinWidth="100" 
                        Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />

                <TextBlock Name="ToTextBlock" FontSize="18" Visibility="Hidden" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="10 0" FlowDirection="LeftToRight">To</TextBlock>

                <DatePicker Name="DatePickerEnd" Visibility="Hidden" IsEnabled="true" Grid.Column="1" FlowDirection="LeftToRight" FontSize="18" HorizontalAlignment="Right" Margin="10 0" MinWidth="100" 
                        Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
                
                <ComboBox FontSize="18" Grid.Column="2" SelectedItem="{Binding SelectedFilter}">
                    <ComboBoxItem Content="Provider ID"/>
                    <ComboBoxItem Content="Name"/>
                    <ComboBoxItem Content="Phone-Number"/>
                    <ComboBoxItem Content="Address"/>
                    <ComboBoxItem IsSelected="{Binding DatePickerEnabled}" Content="Date Range"/>
                </ComboBox>
                <Button Grid.Column="3" Command="{Binding Path=FilterTableCommand}" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="10 0" FontSize="14" Width="100" ToolTip="Resource name: MaterialDesignRaisedLightButton">
                    _FILTER
                </Button>
            </Grid>
        </StackPanel>
        <StackPanel VerticalAlignment="Bottom" DockPanel.Dock="Top" Orientation="Horizontal">
        <DataGrid
            Margin="36 0 36 0"
            ItemsSource="{Binding Providers}"
            CanUserSortColumns="True"
            CanUserAddRows="True"
            AutoGenerateColumns="False"
            materialDesign:DataGridAssist.CellPadding="13 8 8 8"
            materialDesign:DataGridAssist.ColumnHeaderPadding="8"
            DockPanel.Dock="Top">
        
            <DataGrid.Columns>
            
                <DataGridCheckBoxColumn Binding="{Binding IsSelected}" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}" EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                    <DataGridCheckBoxColumn.Header>
                        <!--padding to allow hit test to pass thru for sorting -->
                        <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                            <CheckBox HorizontalAlignment="Center" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}" IsChecked="{Binding IsAllItems3Selected}" />
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>

                <DataGridTextColumn IsReadOnly="True" Binding="{Binding ProviderID}" Header="Provider ID" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
            
                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:MaterialDataGridTextColumn IsReadOnly="True" Binding="{Binding ProviderName}" Header="Name" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                <!-- set a max length to get an indicator in the editor -->
                <materialDesign:MaterialDataGridTextColumn IsReadOnly="True" Binding="{Binding Phone}" Header="Phone" MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                <materialDesign:MaterialDataGridTextColumn IsReadOnly="True" Binding="{Binding Address}" Header="Address" Width="120" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Right" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </materialDesign:MaterialDataGridTextColumn>
                <materialDesign:MaterialDataGridTextColumn IsReadOnly="True" Binding="{Binding RecentInspection}" Header="Recent Inspection" MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:MaterialDataGridTextColumn IsReadOnly="True" Binding="{Binding NextInspection}" Header="Next Inspection" MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                <materialDesign:MaterialDataGridTextColumn IsReadOnly="True" Header="18th Month Drop Date" Binding="{Binding EighteenthMonthDate}" MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <DataGrid
                        
                        Margin="36 0 36 0"
                        ItemsSource="{Binding HomesHistory}"
                        CanUserSortColumns="True"
                        CanUserAddRows="True"
                        AutoGenerateColumns="False"
                        materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                        materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                        DockPanel.Dock="Top"
                        IsReadOnly="True">

                        <DataGrid.Columns>

                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding ProviderID}" Header="Provider ID" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />

                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding HomeID}" Header="Home ID" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding InspectionDate}" Header="Previous Inspection Date" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                            
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding InspectionOutcome}" Header="Inspection Outcome" MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding Path=DataContext.OpenEditHistoryDialogCommand,RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" x:Name="EditHistory_Button" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="Resource name: MaterialDesignRaisedLightButton">
                                            _EDIT
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            
                        </DataGrid.Columns>

                    </DataGrid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>   
        </DataGrid>
        </StackPanel>

        <StackPanel VerticalAlignment="Bottom" DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="50,50,50,50">
            <!--<StackPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="100,100,100,100"/>
                </Style>
            </StackPanel.Resources>-->
            <!--
            <TextBlock FontSize="18">Excel File Directory(Full Path):</TextBlock>
            <TextBox Text="{Binding ExcelFileName}" Width="255"  Margin="20 0" FontSize="18"></TextBox>-->
            <Button Command="{Binding Path=ExportTableCommand}" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="10 0" FontSize="10" Width="120" ToolTip="Resource name: MaterialDesignRaisedLightButton">
                _EXPORT TO EXCEL
            </Button>
            <Button Command="{Binding Path=RefreshTableCommand}" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="10 0" MaxWidth="255" ToolTip="Resource name: MaterialDesignRaisedLightButton">
                _REFRESH TABLE
            </Button>
        </StackPanel>

    </DockPanel>

    <!--
    <Grid>
        <TextBlock Text="This is the First Page" 
                   FontWeight="Bold" FontSize="18"
                   HorizontalAlignment="Center" VerticalAlignment="Center" />

        <TextBox Text="Here's some test" HorizontalAlignment="Center" VerticalAlignment="Top"/>
    </Grid>

    
    

    <ContentPage.Content>
        <StackLayout>
            <Label Text="Welcome to Xamarin.Forms!"
                VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand" />
        </StackLayout>
    </ContentPage.Content>
    -->
</UserControl>