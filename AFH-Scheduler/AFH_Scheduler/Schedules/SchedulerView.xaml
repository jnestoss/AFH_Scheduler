<?xml version="1.0" encoding="utf-8" ?>
<UserControl x:Class="AFH_Scheduler.Schedules.SchedulerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:AFH_Scheduler.Schedules"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008">


  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </ResourceDictionary>
  </UserControl.Resources>  
  
  
  <DockPanel LastChildFill="False">
    <Canvas Width="1000" Height="500" Background="White" Margin ="40 0 40 0" DockPanel.Dock="Top">
      <DataGrid

          ItemsSource="{Binding Providers}"
          CanUserSortColumns="True"
          CanUserAddRows="True"
          AutoGenerateColumns="False"
          materialDesign:DataGridAssist.CellPadding="13 8 8 8"
          materialDesign:DataGridAssist.ColumnHeaderPadding="8"
          Width="1000">

        <DataGrid.Columns>

            <DataGridTemplateColumn>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <RadioButton GroupName="Test" IsChecked="{Binding IsDefault}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>

          <DataGridCheckBoxColumn Binding="{x:Static local:SchedulerVM}" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}" EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
            <!--<DataGridCheckBoxColumn.Header>

              <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                <CheckBox HorizontalAlignment="Center" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}" IsChecked="{Binding IsAllItems3Selected}" />
              </Border>
            </DataGridCheckBoxColumn.Header>-->
          </DataGridCheckBoxColumn>

          <DataGridTextColumn Binding="{Binding ProviderID}" Header="Provider ID" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />

          <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
          <materialDesign:MaterialDataGridTextColumn Binding="{Binding ProviderName}" Header="Name" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

          <!-- set a max length to get an indicator in the editor -->
          <materialDesign:MaterialDataGridTextColumn Binding="{Binding Phone}" Header="Phone" MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

          <materialDesign:MaterialDataGridTextColumn Binding="{Binding Address}" Header="Address" Width="120" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
            <DataGridTextColumn.HeaderStyle>
              <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="ContentTemplate">
                  <Setter.Value>
                    <DataTemplate>
                      <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Right" />
                    </DataTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </DataGridTextColumn.HeaderStyle>
            <DataGridTextColumn.ElementStyle>
              <Style TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Right" />
              </Style>
            </DataGridTextColumn.ElementStyle>
          </materialDesign:MaterialDataGridTextColumn>
          <materialDesign:MaterialDataGridTextColumn Binding="{Binding RecentInspection}" Header="Recent Inspection" MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
          <materialDesign:MaterialDataGridTextColumn Binding="{Binding NextInspection}" Header="Next Inspection" MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
          <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->

        </DataGrid.Columns>
      
      </DataGrid>

      <materialDesign:PopupBox
                Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                PlacementMode="BottomAndAlignCentres"
                ToolTipService.Placement="Right"
                ToolTip="PopupBox, Style MaterialDesignMultiFloatingActionPopupBox"
                Opened="PopupBox_OnOpened"
                Closed="PopupBox_OnClosed"
                Canvas.Top="440"
                Canvas.Left="940">
        <StackPanel>
          <Button
            ToolTip="One with custom opacity"
            Opacity="0.5">
            1
          </Button>
          <Button
            ToolTip="Two">
            2
          </Button>
          <Button
            ToolTip="Three">
            3
          </Button>
        </StackPanel>
      </materialDesign:PopupBox>
      
    </Canvas>

    <StackPanel VerticalAlignment="Bottom" DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="50,50,50,50">
      <!--<StackPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="100,100,100,100"/>
                </Style>
            </StackPanel.Resources>-->
      <Button Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="10 0" FontSize="10" Width="120" ToolTip="Resource name: MaterialDesignRaisedLightButton">
        _EXPORT TO EXCEL
      </Button>
      <Button Command="{Binding Path=RefreshTableCommand}" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="10 0" MaxWidth="255" ToolTip="Resource name: MaterialDesignRaisedLightButton">
        _REFRESH TABLE
      </Button>
    </StackPanel>

  </DockPanel>

  <!--
    <Grid>
        <TextBlock Text="This is the First Page" 
                   FontWeight="Bold" FontSize="18"
                   HorizontalAlignment="Center" VerticalAlignment="Center" />

        <TextBox Text="Here's some test" HorizontalAlignment="Center" VerticalAlignment="Top"/>
    </Grid>

    
    

    <ContentPage.Content>
        <StackLayout>
            <Label Text="Welcome to Xamarin.Forms!"
                VerticalOptions="CenterAndExpand" 
                HorizontalOptions="CenterAndExpand" />
        </StackLayout>
    </ContentPage.Content>
    -->
</UserControl>